{"version":3,"file":"static/webpack/static/development/pages/_app.js.b1818d012773f1740140.hot-update.js","sources":["webpack:///./components/CountdownContext.js"],"sourcesContent":["import React from \"react\"\n\nlet CountdownContext\nconst { Provider, Consumer } = (CountdownContext = React.createContext())\n\nclass CountdownProvider extends React.PureComponent {\n  state = {\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  }\n\n  finalDate = new Date(\"July 26 2019\").getTime()\n  intervalId = null\n  componentDidMount() {\n    this.intervalId = setInterval(this.timer, 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId)\n  }\n\n  timer = () => {\n    const now = new Date().getTime()\n    const distance = this.finalDate - now\n    console.log(distance)\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24))\n    const hours = Math.floor(\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    )\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000)\n\n    this.setState(prevState => ({\n      ...(prevState.days !== days ? { days } : {}),\n      ...(prevState.hours !== hours ? { hours } : {}),\n      ...(prevState.minutes !== minutes ? { minutes } : {}),\n      ...(prevState.seconds !== seconds ? { seconds } : {})\n    }))\n  }\n\n  render() {\n    return <Provider value={this.state}>{this.props.children}</Provider>\n  }\n}\n\nexport { CountdownProvider, Consumer as CountdownConsumer, CountdownContext }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAJA;AAMA;AACA;;;;;;AA1BA;AACA;AACA;;;AAEA;AACA;AACA;;;AAqBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAvCA;AACA;;;;;A","sourceRoot":""}